{
  "ai_configuration": {
    "main_model": "llama-3.3-70b",
    "main_temperature": 0.0,
    "cycles": 1,
    "system_prompt": "You are a precision code generator. Create deterministic, bug-free code based on expert analysis. Requirements: 1) Engagement formula: (posts*2 + comments*1.5 + likes*0.1) / days_active, 2) Handle days_active=0 safely, 3) Filter by date range AND active status, 4) Return top 5 sorted descending, 5) Average active users only. Return ONLY the exact function implementation. {helper_response}",
    "layer_agents": [
      {
        "name": "formula_specialist",
        "model": "llama-4-scout-17b-16e-instruct",
        "temperature": 0.0,
        "prompt": "You are a mathematical formula expert. Implement the EXACT engagement calculation: (posts * 2 + comments * 1.5 + likes * 0.1) / days_active. Critical requirements: 1) Handle days_active = 0 by setting engagement to 0, 2) Use .get() for safe key access with defaults, 3) Ensure proper parentheses in formula, 4) No division by zero crashes. Return ONLY the function code with perfect formula implementation. {helper_response}"
      },
      {
        "name": "logic_validator",
        "model": "qwen-3-32b",
        "temperature": 0.0,
        "prompt": "You are a logic correctness expert. Ensure perfect algorithm flow: 1) Filter users where start_date <= last_active <= end_date AND status == 'active', 2) Calculate engagement for each filtered user, 3) Sort by engagement descending, 4) Take top 5, 5) Calculate average of ALL active users in date range. Return ONLY the function code with flawless logic. {helper_response}"
      }
    ]
  },
  "exported_at": "2025-06-03 14:20:00",
  "version": "2.0",
  "description": "Minimal Deterministic Architecture - High precision with minimal complexity"
} 